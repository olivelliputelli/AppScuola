@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<ApplicationDbContext> DbFactory

<h3>Studenti Media Periodo</h3>
<p>
    Da
    <input type="date" @bind-value=@dInizio />
    a
    <input type="date" @bind-value=@dFine />
    <select @bind=@tipo>
        <option value="">Tutte</option>
        <option value="S">Scritto</option>
        <option value="O">Orale</option>
        <option value="P">Pratico</option>
    </select>
    <button @onclick="Filtra">Filtra</button>
</p>

@if (StudentiMedia == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Matricola</th>
                <th>Nominativo</th>
                <th>Numero</th>
                <th>Media</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in StudentiMedia)
            {
                <tr>
                    <td>@item.Matricola</td>
                    <td>@item.Nominativo</td>
                    <td>@item.Numero</td>
                    <td>@item.Media</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private DateTime dInizio = new DateTime(DateTime.Now.Year - 1, 9, 1);
    private DateTime dFine = DateTime.Now;
    private string tipo = "";

    private List<StudenteMedia> StudentiMedia;

    protected override async Task OnInitializedAsync()
    {
        LoadVerifiche(dInizio, dFine);
    }

    private void LoadVerifiche(DateTime dI, DateTime dF)
    {
        using var context = DbFactory.CreateDbContext();
        StudentiMedia = context.Verifiche
        .Where(v => v.Data >= dI && v.Data <= dF)
        .Where(v => String.IsNullOrEmpty(tipo) || v.Tipo == tipo)
        .Include(v => v.Studente)
        .GroupBy(s => new { s.Matricola, s.Studente.Nominativo })
        .Select(k => new StudenteMedia()
            {
                Matricola = k.Key.Matricola,
                Nominativo = k.Key.Nominativo,
                Numero = k.Count(),
                Media = k.Average(v => v.Voto)
            }
        )
        .ToList();
    }

    private void Filtra()
    {
        LoadVerifiche(dInizio, dFine);

    }

    class StudenteMedia
    {
        public Guid Matricola { get; set; }
        public string Nominativo { get; set; }
        public int Numero { get; set; }
        public decimal Media { get; set; }
    }
}
