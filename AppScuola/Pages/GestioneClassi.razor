@page "/gestioneclassi"
@attribute [Authorize]

@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager Navigation

<PageTitle>Gestione Classi</PageTitle>

<h1>Classi</h1>

<EditForm Model="@classe" OnValidSubmit="AddUpdate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label>
        Sigla classe:
        <InputText @bind-Value="classe.Sigla" />
    </label>
    <label>
        Nome esteso:
        <InputText @bind-Value="classe.NomeEsteso" />
    </label>
    <label>
        Ubicazione:
        <InputText @bind-Value="classe.Ubicazione" />
    </label>
    <label>
        Multimediale:
        <InputCheckbox @bind-Value="classe.IsMultimediale" />
    </label>

    <button type="submit">Aggiungi</button>
</EditForm>


@if (Classi == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Sigla classe</th>
                <th>Classe</th>
                <th>Dettagli</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Classi)
            {
                <tr>
                    <td>@item.Sigla.ToUpper()</td>
                    <td>@item.IsMultimediale</td>
                    <td>
                        <button @onclick="@(() => Dettagli(item.Sigla))">Dettagli</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Classe classe = new();
    private List<Classe> Classi;

    private void AddUpdate()
    {
        using var context = DbFactory.CreateDbContext();
        context.Classi?.Add(classe);
        context.SaveChangesAsync();
        classe = new();
        LoadClassi();
    }

    private void Dettagli(string sigla)
    {
        Navigation.NavigateTo($"/classe/{sigla}");
    }

    protected override async Task OnInitializedAsync()
    {
        LoadClassi();
    }

    private void LoadClassi()
    {
        using var context = DbFactory.CreateDbContext();
        Classi = context.Classi
        .Include(s => s.Studenti)
        .ToList();
    }
}
